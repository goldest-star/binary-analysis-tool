parameters:
  - name: artifactName
    type: string
    default: linux_release
  - name: pythonArtifact
    type: string
    default: python_linux

steps:
  - checkout: self
    persistCredentials: true
    submodules: true

  - bash: |
      rm .releaserc.json
      cp ci/justversion.releaserc.json .releaserc.json
      npm ci
      npx semantic-release
    displayName: 'Update the version number for the build'
    condition: eq(variables['Build.SourceBranch'], 'refs/heads/master')

  - bash: |
      conan remote add myconan https://helloadam.jfrog.io/artifactory/api/conan/conan
      conan config set general.keep_python_files=True
    displayName: 'Configure Conan'

  - bash: | 
      mkdir build
      cd build
      conan install .. --build=missing
    workingDirectory: $(Build.SourcesDirectory)
    displayName: 'Run conan install'

  - bash: |
      conan build ..
    workingDirectory: $(Build.SourcesDirectory)/build
    displayName: 'Run conan build'

  - bash: |
      conan package ..
    workingDirectory: $(Build.SourcesDirectory)/build
    displayName: 'Run conan package'

  - bash: |
      tar -czf ../${{ parameters.artifactName }}.tar.gz .
      cp ../${{ parameters.artifactName }}.tar.gz $(Build.ArtifactStagingDirectory)
    workingDirectory: $(Build.SourcesDirectory)/build/package
    displayName: 'Collect and zip package files'

  - bash: |
      npm ci
      mkdir app
      ./prepare_tests.js
      export QT_DEBUG_PLUGINS=1
      ./test_hobbits.js `pwd`/../build/package/bin/hobbits-runner `pwd`/../build/package/hobbits-cpython
    displayName: 'Run tests'
    workingDirectory: $(Build.SourcesDirectory)/tests

  - task: PublishBuildArtifacts@1
    inputs:
      pathToPublish: $(Build.ArtifactStagingDirectory)
      artifactName: ${{ parameters.artifactName }}
