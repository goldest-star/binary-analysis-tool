steps:
  - checkout: self
    persistCredentials: true
    submodules: true

  - task: UsePythonVersion@0 
    inputs:
      versionSpec: '3.7'

  - task: NodeTool@0
    inputs:
      versionSpec: '12.x'

  - bash: |
      BUILD_ID=`curl 'https://dev.azure.com/mahlet-inc/hobbits/_apis/build/builds?api-version=5.0&%24top=1&definitions=2' | python.exe -c "import sys, json; print(json.load(sys.stdin)['value'][0]['id'])"`
      echo "Build ID: ${BUILD_ID}"
      curl "https://dev.azure.com/mahlet-inc/hobbits/_apis/build/builds/${BUILD_ID}/artifacts?artifactName=${PYTHON_ARTIFACT}&api-version=5.1&%24format=zip" --output hobbits_python.zip
      unzip hobbits_python.zip
      rm -fv hobbits_python.zip
      mv ${PYTHON_ARTIFACT} hobbits_python
    env:
      PYTHON_ARTIFACT: python_windows_2019
    displayName: 'Get hobbits python artifact'
  
  - script: |
      dir $(Build.SourcesDirectory)\hobbits_python
    displayName: 'Show hobbits python directory'

  - bash: |
      rm .releaserc.json
      cp ci/justversion.releaserc.json .releaserc.json
      npm ci
      npx semantic-release
    displayName: 'Update the version number for the build'
    condition: eq(variables['Build.SourceBranch'], 'refs/heads/master')
      
  - script: |
      cd $(Build.SourcesDirectory)
      python -m pip install aqtinstall==0.9.8
    displayName: 'Install aqtinstall'

  - script: | 
      python -m aqt install --outputdir $(Build.BinariesDirectory)\Qt 5.14.1 windows desktop win64_msvc2017_64 -m qtcore qtgui qtnetwork qtwidgets
    displayName: 'Install Qt 5.14.1'

  - script: | 
      python -m aqt tool --outputdir $(Build.BinariesDirectory)\Qt windows tools_openssl_x64 1.1.1-4 qt.tools.openssl.win_x64
    displayName: 'Install OpenSSL for QtNetwork'

  - script: |
      cd $(Build.SourcesDirectory)\windows
      call "C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\VC\\Auxiliary\\Build\\vcvars64.bat"
      lib.exe /def:libfftw3-3.def
      dir
    displayName: 'Create FFTW .lib'

  - script: | 
      call "C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\VC\\Auxiliary\\Build\\vcvars64.bat"
      md build
      cd build
      cmake "-GNMake Makefiles" -DCMAKE_BUILD_TYPE=Release -DCMAKE_PREFIX_PATH=$(Build.BinariesDirectory)\Qt\5.14.1\msvc2017_64\lib\cmake -DFFTW_ROOT=$(Build.SourcesDirectory)\windows -DMANUAL_PYTHON_PATH=$(Build.SourcesDirectory)\hobbits_python ..
    displayName: 'Run cmake'

  - script: |
      call "C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\VC\\Auxiliary\\Build\\vcvars64.bat"
      nmake
    workingDirectory: $(Build.SourcesDirectory)/build
    displayName: 'Build hobbits'

  - script: |
      call "C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\VC\\Auxiliary\\Build\\vcvars64.bat"
      nmake package
      move .\*.zip $(Build.ArtifactStagingDirectory)\
    workingDirectory: $(Build.SourcesDirectory)/build
    displayName: 'Package binaries'

  - task: PublishBuildArtifacts@1
    inputs:
      pathToPublish: $(Build.ArtifactStagingDirectory)
      artifactName: windows_release
