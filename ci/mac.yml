steps:
  - checkout: self
    persistCredentials: true
    submodules: true

  - script: brew install fftw
    displayName: 'Install FFTW3'

  - script: brew install libpcap
    displayName: 'Install libpcap'

  - script: brew install ninja
    displayName: 'Install Ninja'

  - script: brew install cmake
    displayName: 'Install CMake'

  - script: brew install pkg-config
    displayName: 'Install pkg-config'

  - script: brew install gettext
    displayName: 'Install gettext'

  - task: UsePythonVersion@0 
    inputs:
      versionSpec: '3.x'

  - task: NodeTool@0
    inputs:
      versionSpec: '12.x'
    
  - bash: |
      BUILD_ID=`curl 'https://dev.azure.com/mahlet-inc/hobbits/_apis/build/builds?api-version=5.0&%24top=1&definitions=2' | python3 -c "import sys, json; print(json.load(sys.stdin)['value'][0]['id'])"`
      echo "Build ID: ${BUILD_ID}"
      curl "https://dev.azure.com/mahlet-inc/hobbits/_apis/build/builds/${BUILD_ID}/artifacts?artifactName=${PYTHON_ARTIFACT}&api-version=5.1&%24format=zip" --output hobbits_python.zip
      unzip hobbits_python.zip
      rm -fv hobbits_python.zip
      mv ${PYTHON_ARTIFACT} hobbits_python
      cd hobbits_python
      tar xvf ${PYTHON_ARTIFACT}.tgz
      rm -fv ${PYTHON_ARTIFACT}.tgz
      ls -l $(Build.SourcesDirectory)/hobbits_python
    env:
      PYTHON_ARTIFACT: python_macos_1014
    displayName: 'Get hobbits python artifact'

  - bash: |
      rm .releaserc.json
      cp ci/justversion.releaserc.json .releaserc.json
      npm ci
      npx semantic-release
    displayName: 'Update the version number for the build'
    condition: eq(variables['Build.SourceBranch'], 'refs/heads/master')
  
  - script: |
      /bin/bash -c "sudo xcode-select -s /Applications/Xcode_11.app/Contents/Developer"
    displayName: 'Use Xcode 11'
      
  - script: |
      cd $(Build.SourcesDirectory)
      python3 -m pip install aqtinstall==0.9.8
    displayName: 'Install aqtinstall'

  - script: | 
      python3 -m aqt install --outputdir $(Build.BinariesDirectory)/Qt 5.14.1 mac desktop -m qtcore qtgui qtnetwork qtwidgets
    displayName: 'Install Qt 5.14.1'

  - script: | 
      mkdir build
      cd build
      cmake -DCMAKE_BUILD_TYPE=Release -DMANUAL_PYTHON_PATH=$(Build.SourcesDirectory)/hobbits_python -DCMAKE_PREFIX_PATH=$(Build.BinariesDirectory)/Qt/5.14.1/clang_64/lib/cmake ..
    workingDirectory: $(Build.SourcesDirectory)
    displayName: 'Configure'

  - script: |
      make
    workingDirectory: $(Build.SourcesDirectory)/build
    displayName: 'Build hobbits'

  - script: |
      make package
      mv hobbits-*.tar.xz $(Build.ArtifactStagingDirectory)
    workingDirectory: $(Build.SourcesDirectory)/build
    displayName: 'Create mac app bundle'

  - task: PublishBuildArtifacts@1
    inputs:
      pathToPublish: $(Build.ArtifactStagingDirectory)
      artifactName: mac_release
